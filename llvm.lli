; ModuleID = 'main'
source_filename = "main"

@0 = private unnamed_addr constant [13 x i8] c"Hello World\0A\00"
@1 = private unnamed_addr constant [13 x i8] c"Hello World\0A\00"

declare i32 @puts(i8*)

declare i32 @printf(i8*, ...)

declare i32 @putchar(i8)

declare i8* @malloc(i32)

declare i32 @strlen(i8*)

declare i8* @strncpy(i8*, i8*, i32)

define void @main() {
entry:
  %len = alloca i32
  %0 = call i32 @strlen(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @0, i32 0, i32 0))
  store i32 %0, i32* %len
  %hw = alloca i8*
  %1 = load i32, i32* %len
  %2 = call i8* @malloc(i32 %1)
  store i8* %2, i8** %hw
  %3 = load i8*, i8** %hw
  %4 = load i32, i32* %len
  %5 = call i8* @strncpy(i8* %3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @1, i32 0, i32 0), i32 %4)
  %6 = load i8*, i8** %hw
  %7 = call i32 (i8*, ...) @printf(i8* %6)
  %8 = load i8*, i8** %hw
  %9 = getelementptr inbounds i8, i8* %8, i32 0
  store i8 74, i8* %9
  %10 = load i8*, i8** %hw
  %11 = call i32 (i8*, ...) @printf(i8* %10)
  ret void
}
