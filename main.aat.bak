module libc {
    public extern fn printf str, ... -> i32
}

module std {
    public fn println s: str -> () = ::libc::printf "%s\n", s
    public fn println c: char -> () = ::libc::printf "%c\n", c

    public fn println i: i8 -> () = ::libc::printf "%hhi\n", i
    public fn println i: i16 -> () = ::libc::printf "%hi\n", i
    public fn println i: i32 -> () = ::libc::printf "%i\n", i
    public fn println i: i64 -> () = ::libc::printf "%li\n", i
    public fn println u: u8 -> () = ::libc::printf "%hhu\n", u
    public fn println u: u16 -> () = ::libc::printf "%hu\n", u
    public fn println u: u32 -> () = ::libc::printf "%u\n", u
    public fn println u: u64 -> () = ::libc::printf "%lu\n", u
    public fn println f: f64 -> () = ::libc::printf "%f\n", f
    public fn println f: f64 -> () = ::libc::printf "%f\n", f
}

fn add[I] a: I, b: I -> I = a + b

@entry
fn main () = {
    libc::printf "%d\n", add[i32] 10, 8
}