const SCREEN: i32 = 0xB8000

fn putc c: char, i: i32 -> () = {
    var screen = SCREEN as str
    val index = (i) * 2

    screen[index] = c
    screen[index + 1] = 31i8 as char
}

fn puts s: str, i: i32 -> () = {
    putc s[i], i

    val si = s[i] as i8
    if si != 0i8 puts s, i + 1
}

fn clear_row row: i32, column: i32 -> () = {
    var screen = SCREEN as str

    val index = (column + row * 80) * 2

    screen[index] = ' '
    screen[index + 1] = 31i8 as char

    if column < 79 clear_row row, column + 1
}

fn cls row: i32 -> () = {
    clear_row row, 0

    if row < 24 cls row + 1
}

@entry
fn kern_main () -> () = {
    cls 0
    puts "Hello World!", 0
}
